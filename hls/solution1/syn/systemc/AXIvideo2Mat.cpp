// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXIvideo2Mat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXIvideo2Mat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXIvideo2Mat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state1 = "1";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state2 = "10";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state3 = "100";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state4 = "1000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state7 = "100000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_pp2_stage0 = "1000000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state10 = "10000000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool AXIvideo2Mat::ap_const_boolean_1 = true;
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_0 = "0";
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_1 = "1";
const sc_lv<2> AXIvideo2Mat::ap_const_lv2_0 = "00";
const sc_lv<2> AXIvideo2Mat::ap_const_lv2_2 = "10";
const sc_lv<2> AXIvideo2Mat::ap_const_lv2_3 = "11";
const sc_lv<2> AXIvideo2Mat::ap_const_lv2_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_4 = "100";
const bool AXIvideo2Mat::ap_const_boolean_0 = false;
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_6 = "110";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_3 = "11";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_5 = "101";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_7 = "111";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_2 = "10";
const sc_lv<11> AXIvideo2Mat::ap_const_lv11_0 = "00000000000";
const sc_lv<11> AXIvideo2Mat::ap_const_lv11_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_8 = "1000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_F = "1111";

AXIvideo2Mat::AXIvideo2Mat(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( ap_predicate_op61_read_state6 );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( ap_predicate_op61_read_state6 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( ap_predicate_op61_read_state6 );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_reg_289 );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_reg_289 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( ap_predicate_op61_read_state6 );

    SC_METHOD(thread_ap_block_state8_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_pp2_stage0_iter1);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( eol_2_i_reg_289 );

    SC_METHOD(thread_ap_condition_491);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_i_reg_442 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( exitcond2_i_fu_351_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4);
    sensitive << ( video_in_V_last_V_0_data_out );
    sensitive << ( brmerge_i_reg_451 );
    sensitive << ( eol_reg_242 );
    sensitive << ( ap_phi_reg_pp1_iter1_axi_last_V_2_i_reg_264 );
    sensitive << ( ap_condition_491 );

    SC_METHOD(thread_ap_phi_mux_eol_2_i_phi_fu_292_p4);
    sensitive << ( video_in_V_last_V_0_data_out );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( eol_2_i_reg_289 );

    SC_METHOD(thread_ap_phi_mux_eol_i_phi_fu_234_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( eol_i_reg_230 );
    sensitive << ( ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_s_phi_fu_281_p4);
    sensitive << ( video_in_V_data_V_0_data_out );
    sensitive << ( brmerge_i_reg_451 );
    sensitive << ( axi_data_V_1_i_reg_253 );
    sensitive << ( ap_phi_reg_pp1_iter1_p_Val2_s_reg_277 );
    sensitive << ( ap_condition_491 );

    SC_METHOD(thread_ap_phi_reg_pp1_iter1_axi_last_V_2_i_reg_264);

    SC_METHOD(thread_ap_phi_reg_pp1_iter1_p_Val2_s_reg_277);

    SC_METHOD(thread_ap_predicate_op61_read_state6);
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( brmerge_i_reg_451 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond2_i_fu_351_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_brmerge_i_fu_376_p2);
    sensitive << ( ap_phi_mux_eol_i_phi_fu_234_p4 );
    sensitive << ( sof_1_i_fu_140 );

    SC_METHOD(thread_cols_V_fu_338_p1);
    sensitive << ( width );

    SC_METHOD(thread_exitcond2_i_fu_351_p2);
    sensitive << ( rows_V_fu_334_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_V_reg_208 );

    SC_METHOD(thread_exitcond_i_fu_362_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( t_V_2_reg_219 );
    sensitive << ( cols_V_fu_338_p1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_i_V_fu_356_p2);
    sensitive << ( t_V_reg_208 );

    SC_METHOD(thread_img_data_stream_0_V_blk_n);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_i_reg_442 );

    SC_METHOD(thread_img_data_stream_0_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_281_p4 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_0_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_img_data_stream_1_V_blk_n);
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_i_reg_442 );

    SC_METHOD(thread_img_data_stream_1_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_281_p4 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_1_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_j_V_fu_367_p2);
    sensitive << ( t_V_2_reg_219 );

    SC_METHOD(thread_rows_V_fu_334_p1);
    sensitive << ( height );

    SC_METHOD(thread_tmp_user_V_fu_342_p1);
    sensitive << ( video_in_V_user_V_0_data_out );

    SC_METHOD(thread_video_in_TDATA_blk_n);
    sensitive << ( video_in_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_i_reg_442 );
    sensitive << ( brmerge_i_reg_451 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( eol_2_i_reg_289 );

    SC_METHOD(thread_video_in_TREADY);
    sensitive << ( video_in_V_dest_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_ack_in);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_reg_289 );
    sensitive << ( ap_predicate_op61_read_state6 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_video_in_V_data_V_0_data_out);
    sensitive << ( video_in_V_data_V_0_payload_A );
    sensitive << ( video_in_V_data_V_0_payload_B );
    sensitive << ( video_in_V_data_V_0_sel );

    SC_METHOD(thread_video_in_V_data_V_0_load_A);
    sensitive << ( video_in_V_data_V_0_sel_wr );
    sensitive << ( video_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_data_V_0_load_B);
    sensitive << ( video_in_V_data_V_0_sel_wr );
    sensitive << ( video_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_data_V_0_sel);
    sensitive << ( video_in_V_data_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_data_V_0_state_cmp_full);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_data_V_0_vld_out);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_dest_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_reg_289 );
    sensitive << ( ap_predicate_op61_read_state6 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_video_in_V_dest_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_last_V_0_ack_in);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_last_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_reg_289 );
    sensitive << ( ap_predicate_op61_read_state6 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_video_in_V_last_V_0_data_out);
    sensitive << ( video_in_V_last_V_0_payload_A );
    sensitive << ( video_in_V_last_V_0_payload_B );
    sensitive << ( video_in_V_last_V_0_sel );

    SC_METHOD(thread_video_in_V_last_V_0_load_A);
    sensitive << ( video_in_V_last_V_0_sel_wr );
    sensitive << ( video_in_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_last_V_0_load_B);
    sensitive << ( video_in_V_last_V_0_sel_wr );
    sensitive << ( video_in_V_last_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_last_V_0_sel);
    sensitive << ( video_in_V_last_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_last_V_0_state_cmp_full);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_last_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_last_V_0_vld_out);
    sensitive << ( video_in_V_last_V_0_state );

    SC_METHOD(thread_video_in_V_user_V_0_ack_in);
    sensitive << ( video_in_V_user_V_0_state );

    SC_METHOD(thread_video_in_V_user_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( eol_2_i_reg_289 );
    sensitive << ( ap_predicate_op61_read_state6 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_video_in_V_user_V_0_data_out);
    sensitive << ( video_in_V_user_V_0_payload_A );
    sensitive << ( video_in_V_user_V_0_payload_B );
    sensitive << ( video_in_V_user_V_0_sel );

    SC_METHOD(thread_video_in_V_user_V_0_load_A);
    sensitive << ( video_in_V_user_V_0_sel_wr );
    sensitive << ( video_in_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_user_V_0_load_B);
    sensitive << ( video_in_V_user_V_0_sel_wr );
    sensitive << ( video_in_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_user_V_0_sel);
    sensitive << ( video_in_V_user_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_user_V_0_state_cmp_full);
    sensitive << ( video_in_V_user_V_0_state );

    SC_METHOD(thread_video_in_V_user_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_user_V_0_vld_out);
    sensitive << ( video_in_V_user_V_0_state );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond2_i_fu_351_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( tmp_user_V_fu_342_p1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    video_in_V_data_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_data_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_data_V_0_state = "00";
    video_in_V_user_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_user_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_user_V_0_state = "00";
    video_in_V_last_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_last_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_last_V_0_state = "00";
    video_in_V_dest_V_0_state = "00";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXIvideo2Mat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, video_in_TDATA, "(port)video_in_TDATA");
    sc_trace(mVcdFile, video_in_TVALID, "(port)video_in_TVALID");
    sc_trace(mVcdFile, video_in_TREADY, "(port)video_in_TREADY");
    sc_trace(mVcdFile, video_in_TKEEP, "(port)video_in_TKEEP");
    sc_trace(mVcdFile, video_in_TSTRB, "(port)video_in_TSTRB");
    sc_trace(mVcdFile, video_in_TUSER, "(port)video_in_TUSER");
    sc_trace(mVcdFile, video_in_TLAST, "(port)video_in_TLAST");
    sc_trace(mVcdFile, video_in_TID, "(port)video_in_TID");
    sc_trace(mVcdFile, video_in_TDEST, "(port)video_in_TDEST");
    sc_trace(mVcdFile, height, "(port)height");
    sc_trace(mVcdFile, width, "(port)width");
    sc_trace(mVcdFile, img_data_stream_0_V_din, "(port)img_data_stream_0_V_din");
    sc_trace(mVcdFile, img_data_stream_0_V_full_n, "(port)img_data_stream_0_V_full_n");
    sc_trace(mVcdFile, img_data_stream_0_V_write, "(port)img_data_stream_0_V_write");
    sc_trace(mVcdFile, img_data_stream_1_V_din, "(port)img_data_stream_1_V_din");
    sc_trace(mVcdFile, img_data_stream_1_V_full_n, "(port)img_data_stream_1_V_full_n");
    sc_trace(mVcdFile, img_data_stream_1_V_write, "(port)img_data_stream_1_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, video_in_V_data_V_0_data_out, "video_in_V_data_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_vld_in, "video_in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_data_V_0_vld_out, "video_in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_ack_in, "video_in_V_data_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_data_V_0_ack_out, "video_in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_payload_A, "video_in_V_data_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_data_V_0_payload_B, "video_in_V_data_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel_rd, "video_in_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel_wr, "video_in_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel, "video_in_V_data_V_0_sel");
    sc_trace(mVcdFile, video_in_V_data_V_0_load_A, "video_in_V_data_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_data_V_0_load_B, "video_in_V_data_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_data_V_0_state, "video_in_V_data_V_0_state");
    sc_trace(mVcdFile, video_in_V_data_V_0_state_cmp_full, "video_in_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_user_V_0_data_out, "video_in_V_user_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_user_V_0_vld_in, "video_in_V_user_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_user_V_0_vld_out, "video_in_V_user_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_user_V_0_ack_in, "video_in_V_user_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_user_V_0_ack_out, "video_in_V_user_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_user_V_0_payload_A, "video_in_V_user_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_user_V_0_payload_B, "video_in_V_user_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_user_V_0_sel_rd, "video_in_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_user_V_0_sel_wr, "video_in_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_user_V_0_sel, "video_in_V_user_V_0_sel");
    sc_trace(mVcdFile, video_in_V_user_V_0_load_A, "video_in_V_user_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_user_V_0_load_B, "video_in_V_user_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_user_V_0_state, "video_in_V_user_V_0_state");
    sc_trace(mVcdFile, video_in_V_user_V_0_state_cmp_full, "video_in_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_last_V_0_data_out, "video_in_V_last_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_last_V_0_vld_in, "video_in_V_last_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_last_V_0_vld_out, "video_in_V_last_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_last_V_0_ack_in, "video_in_V_last_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_last_V_0_ack_out, "video_in_V_last_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_last_V_0_payload_A, "video_in_V_last_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_last_V_0_payload_B, "video_in_V_last_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_last_V_0_sel_rd, "video_in_V_last_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_last_V_0_sel_wr, "video_in_V_last_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_last_V_0_sel, "video_in_V_last_V_0_sel");
    sc_trace(mVcdFile, video_in_V_last_V_0_load_A, "video_in_V_last_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_last_V_0_load_B, "video_in_V_last_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_last_V_0_state, "video_in_V_last_V_0_state");
    sc_trace(mVcdFile, video_in_V_last_V_0_state_cmp_full, "video_in_V_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_dest_V_0_vld_in, "video_in_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_dest_V_0_ack_out, "video_in_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_dest_V_0_state, "video_in_V_dest_V_0_state");
    sc_trace(mVcdFile, video_in_TDATA_blk_n, "video_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond_i_reg_442, "exitcond_i_reg_442");
    sc_trace(mVcdFile, brmerge_i_reg_451, "brmerge_i_reg_451");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, eol_2_i_reg_289, "eol_2_i_reg_289");
    sc_trace(mVcdFile, img_data_stream_0_V_blk_n, "img_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, img_data_stream_1_V_blk_n, "img_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, t_V_2_reg_219, "t_V_2_reg_219");
    sc_trace(mVcdFile, eol_i_reg_230, "eol_i_reg_230");
    sc_trace(mVcdFile, eol_reg_242, "eol_reg_242");
    sc_trace(mVcdFile, axi_data_V_1_i_reg_253, "axi_data_V_1_i_reg_253");
    sc_trace(mVcdFile, axi_last_V_3_i_reg_300, "axi_last_V_3_i_reg_300");
    sc_trace(mVcdFile, axi_data_V_3_i_reg_312, "axi_data_V_3_i_reg_312");
    sc_trace(mVcdFile, rows_V_fu_334_p1, "rows_V_fu_334_p1");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, cols_V_fu_338_p1, "cols_V_fu_338_p1");
    sc_trace(mVcdFile, tmp_data_V_reg_413, "tmp_data_V_reg_413");
    sc_trace(mVcdFile, tmp_last_V_reg_421, "tmp_last_V_reg_421");
    sc_trace(mVcdFile, exitcond2_i_fu_351_p2, "exitcond2_i_fu_351_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_V_fu_356_p2, "i_V_fu_356_p2");
    sc_trace(mVcdFile, i_V_reg_437, "i_V_reg_437");
    sc_trace(mVcdFile, exitcond_i_fu_362_p2, "exitcond_i_fu_362_p2");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op61_read_state6, "ap_predicate_op61_read_state6");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, j_V_fu_367_p2, "j_V_fu_367_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, brmerge_i_fu_376_p2, "brmerge_i_fu_376_p2");
    sc_trace(mVcdFile, ap_block_state8_pp2_stage0_iter0, "ap_block_state8_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp2_stage0_iter1, "ap_block_state9_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_eol_2_i_phi_fu_292_p4, "ap_phi_mux_eol_2_i_phi_fu_292_p4");
    sc_trace(mVcdFile, axi_last_V1_i_reg_188, "axi_last_V1_i_reg_188");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, axi_data_V1_i_reg_198, "axi_data_V1_i_reg_198");
    sc_trace(mVcdFile, t_V_reg_208, "t_V_reg_208");
    sc_trace(mVcdFile, ap_phi_mux_eol_i_phi_fu_234_p4, "ap_phi_mux_eol_i_phi_fu_234_p4");
    sc_trace(mVcdFile, ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4, "ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_s_phi_fu_281_p4, "ap_phi_mux_p_Val2_s_phi_fu_281_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter1_axi_last_V_2_i_reg_264, "ap_phi_reg_pp1_iter1_axi_last_V_2_i_reg_264");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter1_p_Val2_s_reg_277, "ap_phi_reg_pp1_iter1_p_Val2_s_reg_277");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, sof_1_i_fu_140, "sof_1_i_fu_140");
    sc_trace(mVcdFile, tmp_user_V_fu_342_p1, "tmp_user_V_fu_342_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_condition_491, "ap_condition_491");
#endif

    }
}

AXIvideo2Mat::~AXIvideo2Mat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void AXIvideo2Mat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(exitcond_i_fu_362_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_phi_mux_eol_2_i_phi_fu_292_p4.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_data_V1_i_reg_198 = tmp_data_V_reg_413.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        axi_data_V1_i_reg_198 = axi_data_V_3_i_reg_312.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        axi_data_V_1_i_reg_253 = ap_phi_mux_p_Val2_s_phi_fu_281_p4.read();
    } else if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        axi_data_V_1_i_reg_253 = axi_data_V1_i_reg_198.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_data_V_3_i_reg_312 = axi_data_V_1_i_reg_253.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        axi_data_V_3_i_reg_312 = video_in_V_data_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_last_V1_i_reg_188 = tmp_last_V_reg_421.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        axi_last_V1_i_reg_188 = axi_last_V_3_i_reg_300.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_last_V_3_i_reg_300 = eol_reg_242.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        axi_last_V_3_i_reg_300 = video_in_V_last_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        eol_2_i_reg_289 = eol_i_reg_230.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        eol_2_i_reg_289 = video_in_V_last_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_i_reg_230 = ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4.read();
    } else if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        eol_i_reg_230 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_reg_242 = ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4.read();
    } else if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        eol_reg_242 = axi_last_V1_i_reg_188.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_362_p2.read()))) {
        sof_1_i_fu_140 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sof_1_i_fu_140 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_362_p2.read()))) {
        t_V_2_reg_219 = j_V_fu_367_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        t_V_2_reg_219 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_V_reg_208 = ap_const_lv11_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_V_reg_208 = i_V_reg_437.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_out.read()))) {
            video_in_V_data_V_0_sel_rd =  (sc_logic) (~video_in_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_in.read()))) {
            video_in_V_data_V_0_sel_wr =  (sc_logic) (~video_in_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            video_in_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            video_in_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()))))) {
            video_in_V_data_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_dest_V_0_state.read())))) {
            video_in_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_dest_V_0_state.read())))) {
            video_in_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_ack_out.read()))))) {
            video_in_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_out.read()))) {
            video_in_V_last_V_0_sel_rd =  (sc_logic) (~video_in_V_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_in.read()))) {
            video_in_V_last_V_0_sel_wr =  (sc_logic) (~video_in_V_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_last_V_0_state.read())))) {
            video_in_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_last_V_0_state.read())))) {
            video_in_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_ack_out.read()))))) {
            video_in_V_last_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_out.read()))) {
            video_in_V_user_V_0_sel_rd =  (sc_logic) (~video_in_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_in.read()))) {
            video_in_V_user_V_0_sel_wr =  (sc_logic) (~video_in_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_user_V_0_state.read())))) {
            video_in_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_user_V_0_state.read())))) {
            video_in_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_ack_out.read()))))) {
            video_in_V_user_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_362_p2.read()))) {
        brmerge_i_reg_451 = brmerge_i_fu_376_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_i_reg_442 = exitcond_i_fu_362_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_V_reg_437 = i_V_fu_356_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_1))) {
        tmp_data_V_reg_413 = video_in_V_data_V_0_data_out.read();
        tmp_last_V_reg_421 = video_in_V_last_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_load_A.read())) {
        video_in_V_data_V_0_payload_A = video_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_load_B.read())) {
        video_in_V_data_V_0_payload_B = video_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_load_A.read())) {
        video_in_V_last_V_0_payload_A = video_in_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_load_B.read())) {
        video_in_V_last_V_0_payload_B = video_in_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_load_A.read())) {
        video_in_V_user_V_0_payload_A = video_in_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_load_B.read())) {
        video_in_V_user_V_0_payload_B = video_in_TUSER.read();
    }
}

void AXIvideo2Mat::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[4];
}

void AXIvideo2Mat::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[6];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[7];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && ((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state6.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read()))));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && ((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state6.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read()))));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && ((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state6.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read()))));
}

void AXIvideo2Mat::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()));
}

void AXIvideo2Mat::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = (esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()));
}

void AXIvideo2Mat::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void AXIvideo2Mat::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state6.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())));
}

void AXIvideo2Mat::thread_ap_block_state8_pp2_stage0_iter0() {
    ap_block_state8_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_state9_pp2_stage0_iter1() {
    ap_block_state9_pp2_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()));
}

void AXIvideo2Mat::thread_ap_condition_491() {
    ap_condition_491 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()));
}

void AXIvideo2Mat::thread_ap_done() {
    if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void AXIvideo2Mat::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void AXIvideo2Mat::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void AXIvideo2Mat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4() {
    if (esl_seteq<1,1,1>(ap_condition_491.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, brmerge_i_reg_451.read())) {
            ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4 = eol_reg_242.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_reg_451.read())) {
            ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4 = video_in_V_last_V_0_data_out.read();
        } else {
            ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4 = ap_phi_reg_pp1_iter1_axi_last_V_2_i_reg_264.read();
        }
    } else {
        ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4 = ap_phi_reg_pp1_iter1_axi_last_V_2_i_reg_264.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_2_i_phi_fu_292_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()))) {
        ap_phi_mux_eol_2_i_phi_fu_292_p4 = video_in_V_last_V_0_data_out.read();
    } else {
        ap_phi_mux_eol_2_i_phi_fu_292_p4 = eol_2_i_reg_289.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_i_phi_fu_234_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()))) {
        ap_phi_mux_eol_i_phi_fu_234_p4 = ap_phi_mux_axi_last_V_2_i_phi_fu_269_p4.read();
    } else {
        ap_phi_mux_eol_i_phi_fu_234_p4 = eol_i_reg_230.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_p_Val2_s_phi_fu_281_p4() {
    if (esl_seteq<1,1,1>(ap_condition_491.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, brmerge_i_reg_451.read())) {
            ap_phi_mux_p_Val2_s_phi_fu_281_p4 = axi_data_V_1_i_reg_253.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_reg_451.read())) {
            ap_phi_mux_p_Val2_s_phi_fu_281_p4 = video_in_V_data_V_0_data_out.read();
        } else {
            ap_phi_mux_p_Val2_s_phi_fu_281_p4 = ap_phi_reg_pp1_iter1_p_Val2_s_reg_277.read();
        }
    } else {
        ap_phi_mux_p_Val2_s_phi_fu_281_p4 = ap_phi_reg_pp1_iter1_p_Val2_s_reg_277.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_reg_pp1_iter1_axi_last_V_2_i_reg_264() {
    ap_phi_reg_pp1_iter1_axi_last_V_2_i_reg_264 =  (sc_lv<1>) ("X");
}

void AXIvideo2Mat::thread_ap_phi_reg_pp1_iter1_p_Val2_s_reg_277() {
    ap_phi_reg_pp1_iter1_p_Val2_s_reg_277 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void AXIvideo2Mat::thread_ap_predicate_op61_read_state6() {
    ap_predicate_op61_read_state6 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_reg_451.read()));
}

void AXIvideo2Mat::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_brmerge_i_fu_376_p2() {
    brmerge_i_fu_376_p2 = (sof_1_i_fu_140.read() | ap_phi_mux_eol_i_phi_fu_234_p4.read());
}

void AXIvideo2Mat::thread_cols_V_fu_338_p1() {
    cols_V_fu_338_p1 = width.read().range(11-1, 0);
}

void AXIvideo2Mat::thread_exitcond2_i_fu_351_p2() {
    exitcond2_i_fu_351_p2 = (!t_V_reg_208.read().is_01() || !rows_V_fu_334_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_208.read() == rows_V_fu_334_p1.read());
}

void AXIvideo2Mat::thread_exitcond_i_fu_362_p2() {
    exitcond_i_fu_362_p2 = (!t_V_2_reg_219.read().is_01() || !cols_V_fu_338_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_2_reg_219.read() == cols_V_fu_338_p1.read());
}

void AXIvideo2Mat::thread_i_V_fu_356_p2() {
    i_V_fu_356_p2 = (!t_V_reg_208.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(t_V_reg_208.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void AXIvideo2Mat::thread_img_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()))) {
        img_data_stream_0_V_blk_n = img_data_stream_0_V_full_n.read();
    } else {
        img_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_0_V_din() {
    img_data_stream_0_V_din = ap_phi_mux_p_Val2_s_phi_fu_281_p4.read().range(8-1, 0);
}

void AXIvideo2Mat::thread_img_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_0_V_write = ap_const_logic_1;
    } else {
        img_data_stream_0_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()))) {
        img_data_stream_1_V_blk_n = img_data_stream_1_V_full_n.read();
    } else {
        img_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_1_V_din() {
    img_data_stream_1_V_din = ap_phi_mux_p_Val2_s_phi_fu_281_p4.read().range(15, 8);
}

void AXIvideo2Mat::thread_img_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_1_V_write = ap_const_logic_1;
    } else {
        img_data_stream_1_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_j_V_fu_367_p2() {
    j_V_fu_367_p2 = (!t_V_2_reg_219.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(t_V_2_reg_219.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void AXIvideo2Mat::thread_rows_V_fu_334_p1() {
    rows_V_fu_334_p1 = height.read().range(11-1, 0);
}

void AXIvideo2Mat::thread_tmp_user_V_fu_342_p1() {
    tmp_user_V_fu_342_p1 = video_in_V_user_V_0_data_out.read();
}

void AXIvideo2Mat::thread_video_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_442.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_i_reg_451.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read())))) {
        video_in_TDATA_blk_n = video_in_V_data_V_0_state.read()[0];
    } else {
        video_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_video_in_TREADY() {
    video_in_TREADY = video_in_V_dest_V_0_state.read()[1];
}

void AXIvideo2Mat::thread_video_in_V_data_V_0_ack_in() {
    video_in_V_data_V_0_ack_in = video_in_V_data_V_0_state.read()[1];
}

void AXIvideo2Mat::thread_video_in_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        video_in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_video_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_sel.read())) {
        video_in_V_data_V_0_data_out = video_in_V_data_V_0_payload_B.read();
    } else {
        video_in_V_data_V_0_data_out = video_in_V_data_V_0_payload_A.read();
    }
}

void AXIvideo2Mat::thread_video_in_V_data_V_0_load_A() {
    video_in_V_data_V_0_load_A = (video_in_V_data_V_0_state_cmp_full.read() & ~video_in_V_data_V_0_sel_wr.read());
}

void AXIvideo2Mat::thread_video_in_V_data_V_0_load_B() {
    video_in_V_data_V_0_load_B = (video_in_V_data_V_0_sel_wr.read() & video_in_V_data_V_0_state_cmp_full.read());
}

void AXIvideo2Mat::thread_video_in_V_data_V_0_sel() {
    video_in_V_data_V_0_sel = video_in_V_data_V_0_sel_rd.read();
}

void AXIvideo2Mat::thread_video_in_V_data_V_0_state_cmp_full() {
    video_in_V_data_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2Mat::thread_video_in_V_data_V_0_vld_in() {
    video_in_V_data_V_0_vld_in = video_in_TVALID.read();
}

void AXIvideo2Mat::thread_video_in_V_data_V_0_vld_out() {
    video_in_V_data_V_0_vld_out = video_in_V_data_V_0_state.read()[0];
}

void AXIvideo2Mat::thread_video_in_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        video_in_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_video_in_V_dest_V_0_vld_in() {
    video_in_V_dest_V_0_vld_in = video_in_TVALID.read();
}

void AXIvideo2Mat::thread_video_in_V_last_V_0_ack_in() {
    video_in_V_last_V_0_ack_in = video_in_V_last_V_0_state.read()[1];
}

void AXIvideo2Mat::thread_video_in_V_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        video_in_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_video_in_V_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_last_V_0_sel.read())) {
        video_in_V_last_V_0_data_out = video_in_V_last_V_0_payload_B.read();
    } else {
        video_in_V_last_V_0_data_out = video_in_V_last_V_0_payload_A.read();
    }
}

void AXIvideo2Mat::thread_video_in_V_last_V_0_load_A() {
    video_in_V_last_V_0_load_A = (video_in_V_last_V_0_state_cmp_full.read() & ~video_in_V_last_V_0_sel_wr.read());
}

void AXIvideo2Mat::thread_video_in_V_last_V_0_load_B() {
    video_in_V_last_V_0_load_B = (video_in_V_last_V_0_sel_wr.read() & video_in_V_last_V_0_state_cmp_full.read());
}

void AXIvideo2Mat::thread_video_in_V_last_V_0_sel() {
    video_in_V_last_V_0_sel = video_in_V_last_V_0_sel_rd.read();
}

void AXIvideo2Mat::thread_video_in_V_last_V_0_state_cmp_full() {
    video_in_V_last_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2Mat::thread_video_in_V_last_V_0_vld_in() {
    video_in_V_last_V_0_vld_in = video_in_TVALID.read();
}

void AXIvideo2Mat::thread_video_in_V_last_V_0_vld_out() {
    video_in_V_last_V_0_vld_out = video_in_V_last_V_0_state.read()[0];
}

void AXIvideo2Mat::thread_video_in_V_user_V_0_ack_in() {
    video_in_V_user_V_0_ack_in = video_in_V_user_V_0_state.read()[1];
}

void AXIvideo2Mat::thread_video_in_V_user_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_i_reg_289.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        video_in_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_video_in_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_user_V_0_sel.read())) {
        video_in_V_user_V_0_data_out = video_in_V_user_V_0_payload_B.read();
    } else {
        video_in_V_user_V_0_data_out = video_in_V_user_V_0_payload_A.read();
    }
}

void AXIvideo2Mat::thread_video_in_V_user_V_0_load_A() {
    video_in_V_user_V_0_load_A = (video_in_V_user_V_0_state_cmp_full.read() & ~video_in_V_user_V_0_sel_wr.read());
}

void AXIvideo2Mat::thread_video_in_V_user_V_0_load_B() {
    video_in_V_user_V_0_load_B = (video_in_V_user_V_0_sel_wr.read() & video_in_V_user_V_0_state_cmp_full.read());
}

void AXIvideo2Mat::thread_video_in_V_user_V_0_sel() {
    video_in_V_user_V_0_sel = video_in_V_user_V_0_sel_rd.read();
}

void AXIvideo2Mat::thread_video_in_V_user_V_0_state_cmp_full() {
    video_in_V_user_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXIvideo2Mat::thread_video_in_V_user_V_0_vld_in() {
    video_in_V_user_V_0_vld_in = video_in_TVALID.read();
}

void AXIvideo2Mat::thread_video_in_V_user_V_0_vld_out() {
    video_in_V_user_V_0_vld_out = video_in_V_user_V_0_state.read()[0];
}

void AXIvideo2Mat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_user_V_fu_342_p1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(tmp_user_V_fu_342_p1.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(video_in_V_data_V_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(exitcond2_i_fu_351_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

