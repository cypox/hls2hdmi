// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "process_image.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int process_image::C_S_AXI_DATA_WIDTH = "100000";
const int process_image::C_S_AXI_WSTRB_WIDTH = "100";
const int process_image::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic process_image::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<16> process_image::ap_const_lv16_0 = "0000000000000000";
const sc_lv<2> process_image::ap_const_lv2_0 = "00";
const sc_lv<1> process_image::ap_const_lv1_0 = "0";
const sc_logic process_image::ap_const_logic_0 = sc_dt::Log_0;

process_image::process_image(sc_module_name name) : sc_module(name), mVcdFile(0) {
    process_image_CONTROL_BUS_s_axi_U = new process_image_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>("process_image_CONTROL_BUS_s_axi_U");
    process_image_CONTROL_BUS_s_axi_U->AWVALID(s_axi_CONTROL_BUS_AWVALID);
    process_image_CONTROL_BUS_s_axi_U->AWREADY(s_axi_CONTROL_BUS_AWREADY);
    process_image_CONTROL_BUS_s_axi_U->AWADDR(s_axi_CONTROL_BUS_AWADDR);
    process_image_CONTROL_BUS_s_axi_U->WVALID(s_axi_CONTROL_BUS_WVALID);
    process_image_CONTROL_BUS_s_axi_U->WREADY(s_axi_CONTROL_BUS_WREADY);
    process_image_CONTROL_BUS_s_axi_U->WDATA(s_axi_CONTROL_BUS_WDATA);
    process_image_CONTROL_BUS_s_axi_U->WSTRB(s_axi_CONTROL_BUS_WSTRB);
    process_image_CONTROL_BUS_s_axi_U->ARVALID(s_axi_CONTROL_BUS_ARVALID);
    process_image_CONTROL_BUS_s_axi_U->ARREADY(s_axi_CONTROL_BUS_ARREADY);
    process_image_CONTROL_BUS_s_axi_U->ARADDR(s_axi_CONTROL_BUS_ARADDR);
    process_image_CONTROL_BUS_s_axi_U->RVALID(s_axi_CONTROL_BUS_RVALID);
    process_image_CONTROL_BUS_s_axi_U->RREADY(s_axi_CONTROL_BUS_RREADY);
    process_image_CONTROL_BUS_s_axi_U->RDATA(s_axi_CONTROL_BUS_RDATA);
    process_image_CONTROL_BUS_s_axi_U->RRESP(s_axi_CONTROL_BUS_RRESP);
    process_image_CONTROL_BUS_s_axi_U->BVALID(s_axi_CONTROL_BUS_BVALID);
    process_image_CONTROL_BUS_s_axi_U->BREADY(s_axi_CONTROL_BUS_BREADY);
    process_image_CONTROL_BUS_s_axi_U->BRESP(s_axi_CONTROL_BUS_BRESP);
    process_image_CONTROL_BUS_s_axi_U->ACLK(ap_clk);
    process_image_CONTROL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    process_image_CONTROL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    process_image_CONTROL_BUS_s_axi_U->height(height);
    process_image_CONTROL_BUS_s_axi_U->width(width);
    process_image_CONTROL_BUS_s_axi_U->ap_start(ap_start);
    process_image_CONTROL_BUS_s_axi_U->interrupt(interrupt);
    process_image_CONTROL_BUS_s_axi_U->ap_ready(ap_ready);
    process_image_CONTROL_BUS_s_axi_U->ap_done(ap_done);
    process_image_CONTROL_BUS_s_axi_U->ap_idle(ap_idle);
    AXIvideo2Mat_U0 = new AXIvideo2Mat("AXIvideo2Mat_U0");
    AXIvideo2Mat_U0->ap_clk(ap_clk);
    AXIvideo2Mat_U0->ap_rst(ap_rst_n_inv);
    AXIvideo2Mat_U0->ap_start(AXIvideo2Mat_U0_ap_start);
    AXIvideo2Mat_U0->ap_done(AXIvideo2Mat_U0_ap_done);
    AXIvideo2Mat_U0->ap_continue(AXIvideo2Mat_U0_ap_continue);
    AXIvideo2Mat_U0->ap_idle(AXIvideo2Mat_U0_ap_idle);
    AXIvideo2Mat_U0->ap_ready(AXIvideo2Mat_U0_ap_ready);
    AXIvideo2Mat_U0->video_in_TDATA(video_in_TDATA);
    AXIvideo2Mat_U0->video_in_TVALID(video_in_TVALID);
    AXIvideo2Mat_U0->video_in_TREADY(AXIvideo2Mat_U0_video_in_TREADY);
    AXIvideo2Mat_U0->video_in_TKEEP(video_in_TKEEP);
    AXIvideo2Mat_U0->video_in_TSTRB(video_in_TSTRB);
    AXIvideo2Mat_U0->video_in_TUSER(video_in_TUSER);
    AXIvideo2Mat_U0->video_in_TLAST(video_in_TLAST);
    AXIvideo2Mat_U0->video_in_TID(video_in_TID);
    AXIvideo2Mat_U0->video_in_TDEST(video_in_TDEST);
    AXIvideo2Mat_U0->height(height);
    AXIvideo2Mat_U0->width(width);
    AXIvideo2Mat_U0->img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    AXIvideo2Mat_U0->img_data_stream_0_V_full_n(img_data_stream_0_V_full_n);
    AXIvideo2Mat_U0->img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    AXIvideo2Mat_U0->img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    AXIvideo2Mat_U0->img_data_stream_1_V_full_n(img_data_stream_1_V_full_n);
    AXIvideo2Mat_U0->img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    Mat2AXIvideo_U0 = new Mat2AXIvideo("Mat2AXIvideo_U0");
    Mat2AXIvideo_U0->ap_clk(ap_clk);
    Mat2AXIvideo_U0->ap_rst(ap_rst_n_inv);
    Mat2AXIvideo_U0->ap_start(Mat2AXIvideo_U0_ap_start);
    Mat2AXIvideo_U0->ap_done(Mat2AXIvideo_U0_ap_done);
    Mat2AXIvideo_U0->ap_continue(Mat2AXIvideo_U0_ap_continue);
    Mat2AXIvideo_U0->ap_idle(Mat2AXIvideo_U0_ap_idle);
    Mat2AXIvideo_U0->ap_ready(Mat2AXIvideo_U0_ap_ready);
    Mat2AXIvideo_U0->height(height);
    Mat2AXIvideo_U0->width(width);
    Mat2AXIvideo_U0->img_data_stream_0_V_dout(img_data_stream_0_V_dout);
    Mat2AXIvideo_U0->img_data_stream_0_V_empty_n(img_data_stream_0_V_empty_n);
    Mat2AXIvideo_U0->img_data_stream_0_V_read(Mat2AXIvideo_U0_img_data_stream_0_V_read);
    Mat2AXIvideo_U0->img_data_stream_1_V_dout(img_data_stream_1_V_dout);
    Mat2AXIvideo_U0->img_data_stream_1_V_empty_n(img_data_stream_1_V_empty_n);
    Mat2AXIvideo_U0->img_data_stream_1_V_read(Mat2AXIvideo_U0_img_data_stream_1_V_read);
    Mat2AXIvideo_U0->video_out_TDATA(Mat2AXIvideo_U0_video_out_TDATA);
    Mat2AXIvideo_U0->video_out_TVALID(Mat2AXIvideo_U0_video_out_TVALID);
    Mat2AXIvideo_U0->video_out_TREADY(video_out_TREADY);
    Mat2AXIvideo_U0->video_out_TKEEP(Mat2AXIvideo_U0_video_out_TKEEP);
    Mat2AXIvideo_U0->video_out_TSTRB(Mat2AXIvideo_U0_video_out_TSTRB);
    Mat2AXIvideo_U0->video_out_TUSER(Mat2AXIvideo_U0_video_out_TUSER);
    Mat2AXIvideo_U0->video_out_TLAST(Mat2AXIvideo_U0_video_out_TLAST);
    Mat2AXIvideo_U0->video_out_TID(Mat2AXIvideo_U0_video_out_TID);
    Mat2AXIvideo_U0->video_out_TDEST(Mat2AXIvideo_U0_video_out_TDEST);
    img_data_stream_0_V_U = new fifo_w8_d2_A("img_data_stream_0_V_U");
    img_data_stream_0_V_U->clk(ap_clk);
    img_data_stream_0_V_U->reset(ap_rst_n_inv);
    img_data_stream_0_V_U->if_read_ce(ap_var_for_const0);
    img_data_stream_0_V_U->if_write_ce(ap_var_for_const0);
    img_data_stream_0_V_U->if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    img_data_stream_0_V_U->if_full_n(img_data_stream_0_V_full_n);
    img_data_stream_0_V_U->if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    img_data_stream_0_V_U->if_dout(img_data_stream_0_V_dout);
    img_data_stream_0_V_U->if_empty_n(img_data_stream_0_V_empty_n);
    img_data_stream_0_V_U->if_read(Mat2AXIvideo_U0_img_data_stream_0_V_read);
    img_data_stream_1_V_U = new fifo_w8_d2_A("img_data_stream_1_V_U");
    img_data_stream_1_V_U->clk(ap_clk);
    img_data_stream_1_V_U->reset(ap_rst_n_inv);
    img_data_stream_1_V_U->if_read_ce(ap_var_for_const0);
    img_data_stream_1_V_U->if_write_ce(ap_var_for_const0);
    img_data_stream_1_V_U->if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    img_data_stream_1_V_U->if_full_n(img_data_stream_1_V_full_n);
    img_data_stream_1_V_U->if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    img_data_stream_1_V_U->if_dout(img_data_stream_1_V_dout);
    img_data_stream_1_V_U->if_empty_n(img_data_stream_1_V_empty_n);
    img_data_stream_1_V_U->if_read(Mat2AXIvideo_U0_img_data_stream_1_V_read);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_AXIvideo2Mat_U0_start_full_n);

    SC_METHOD(thread_AXIvideo2Mat_U0_start_write);

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_continue);

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_Mat2AXIvideo_U0_start_full_n);

    SC_METHOD(thread_Mat2AXIvideo_U0_start_write);

    SC_METHOD(thread_ap_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( AXIvideo2Mat_U0_ap_idle );
    sensitive << ( Mat2AXIvideo_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_video_in_TREADY);
    sensitive << ( AXIvideo2Mat_U0_video_in_TREADY );

    SC_METHOD(thread_video_out_TDATA);
    sensitive << ( Mat2AXIvideo_U0_video_out_TDATA );

    SC_METHOD(thread_video_out_TDEST);
    sensitive << ( Mat2AXIvideo_U0_video_out_TDEST );

    SC_METHOD(thread_video_out_TID);
    sensitive << ( Mat2AXIvideo_U0_video_out_TID );

    SC_METHOD(thread_video_out_TKEEP);
    sensitive << ( Mat2AXIvideo_U0_video_out_TKEEP );

    SC_METHOD(thread_video_out_TLAST);
    sensitive << ( Mat2AXIvideo_U0_video_out_TLAST );

    SC_METHOD(thread_video_out_TSTRB);
    sensitive << ( Mat2AXIvideo_U0_video_out_TSTRB );

    SC_METHOD(thread_video_out_TUSER);
    sensitive << ( Mat2AXIvideo_U0_video_out_TUSER );

    SC_METHOD(thread_video_out_TVALID);
    sensitive << ( Mat2AXIvideo_U0_video_out_TVALID );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "process_image_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWVALID, "(port)s_axi_CONTROL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWREADY, "(port)s_axi_CONTROL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWADDR, "(port)s_axi_CONTROL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WVALID, "(port)s_axi_CONTROL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WREADY, "(port)s_axi_CONTROL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WDATA, "(port)s_axi_CONTROL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WSTRB, "(port)s_axi_CONTROL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARVALID, "(port)s_axi_CONTROL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARREADY, "(port)s_axi_CONTROL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARADDR, "(port)s_axi_CONTROL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RVALID, "(port)s_axi_CONTROL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RREADY, "(port)s_axi_CONTROL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RDATA, "(port)s_axi_CONTROL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RRESP, "(port)s_axi_CONTROL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BVALID, "(port)s_axi_CONTROL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BREADY, "(port)s_axi_CONTROL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BRESP, "(port)s_axi_CONTROL_BUS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, video_in_TDATA, "(port)video_in_TDATA");
    sc_trace(mVcdFile, video_in_TKEEP, "(port)video_in_TKEEP");
    sc_trace(mVcdFile, video_in_TSTRB, "(port)video_in_TSTRB");
    sc_trace(mVcdFile, video_in_TUSER, "(port)video_in_TUSER");
    sc_trace(mVcdFile, video_in_TLAST, "(port)video_in_TLAST");
    sc_trace(mVcdFile, video_in_TID, "(port)video_in_TID");
    sc_trace(mVcdFile, video_in_TDEST, "(port)video_in_TDEST");
    sc_trace(mVcdFile, video_out_TDATA, "(port)video_out_TDATA");
    sc_trace(mVcdFile, video_out_TKEEP, "(port)video_out_TKEEP");
    sc_trace(mVcdFile, video_out_TSTRB, "(port)video_out_TSTRB");
    sc_trace(mVcdFile, video_out_TUSER, "(port)video_out_TUSER");
    sc_trace(mVcdFile, video_out_TLAST, "(port)video_out_TLAST");
    sc_trace(mVcdFile, video_out_TID, "(port)video_out_TID");
    sc_trace(mVcdFile, video_out_TDEST, "(port)video_out_TDEST");
    sc_trace(mVcdFile, video_in_TVALID, "(port)video_in_TVALID");
    sc_trace(mVcdFile, video_in_TREADY, "(port)video_in_TREADY");
    sc_trace(mVcdFile, video_out_TVALID, "(port)video_out_TVALID");
    sc_trace(mVcdFile, video_out_TREADY, "(port)video_out_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, height, "height");
    sc_trace(mVcdFile, width, "width");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_start, "AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_done, "AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_continue, "AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_idle, "AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready, "AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_video_in_TREADY, "AXIvideo2Mat_U0_video_in_TREADY");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_din, "AXIvideo2Mat_U0_img_data_stream_0_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_write, "AXIvideo2Mat_U0_img_data_stream_0_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_din, "AXIvideo2Mat_U0_img_data_stream_1_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_write, "AXIvideo2Mat_U0_img_data_stream_1_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_start, "Mat2AXIvideo_U0_ap_start");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_done, "Mat2AXIvideo_U0_ap_done");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_continue, "Mat2AXIvideo_U0_ap_continue");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_idle, "Mat2AXIvideo_U0_ap_idle");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_ready, "Mat2AXIvideo_U0_ap_ready");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_0_V_read, "Mat2AXIvideo_U0_img_data_stream_0_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_1_V_read, "Mat2AXIvideo_U0_img_data_stream_1_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_video_out_TDATA, "Mat2AXIvideo_U0_video_out_TDATA");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_video_out_TVALID, "Mat2AXIvideo_U0_video_out_TVALID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_video_out_TKEEP, "Mat2AXIvideo_U0_video_out_TKEEP");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_video_out_TSTRB, "Mat2AXIvideo_U0_video_out_TSTRB");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_video_out_TUSER, "Mat2AXIvideo_U0_video_out_TUSER");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_video_out_TLAST, "Mat2AXIvideo_U0_video_out_TLAST");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_video_out_TID, "Mat2AXIvideo_U0_video_out_TID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_video_out_TDEST, "Mat2AXIvideo_U0_video_out_TDEST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, img_data_stream_0_V_full_n, "img_data_stream_0_V_full_n");
    sc_trace(mVcdFile, img_data_stream_0_V_dout, "img_data_stream_0_V_dout");
    sc_trace(mVcdFile, img_data_stream_0_V_empty_n, "img_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, img_data_stream_1_V_full_n, "img_data_stream_1_V_full_n");
    sc_trace(mVcdFile, img_data_stream_1_V_dout, "img_data_stream_1_V_dout");
    sc_trace(mVcdFile, img_data_stream_1_V_empty_n, "img_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_full_n, "AXIvideo2Mat_U0_start_full_n");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_write, "AXIvideo2Mat_U0_start_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_full_n, "Mat2AXIvideo_U0_start_full_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_write, "Mat2AXIvideo_U0_start_write");
#endif

    }
    mHdltvinHandle.open("process_image.hdltvin.dat");
    mHdltvoutHandle.open("process_image.hdltvout.dat");
}

process_image::~process_image() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete process_image_CONTROL_BUS_s_axi_U;
    delete AXIvideo2Mat_U0;
    delete Mat2AXIvideo_U0;
    delete img_data_stream_0_V_U;
    delete img_data_stream_1_V_U;
}

void process_image::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void process_image::thread_AXIvideo2Mat_U0_ap_continue() {
    AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void process_image::thread_AXIvideo2Mat_U0_ap_start() {
    AXIvideo2Mat_U0_ap_start = (ap_start.read());
}

void process_image::thread_AXIvideo2Mat_U0_start_full_n() {
    AXIvideo2Mat_U0_start_full_n = ap_const_logic_1;
}

void process_image::thread_AXIvideo2Mat_U0_start_write() {
    AXIvideo2Mat_U0_start_write = ap_const_logic_0;
}

void process_image::thread_Mat2AXIvideo_U0_ap_continue() {
    Mat2AXIvideo_U0_ap_continue = ap_const_logic_1;
}

void process_image::thread_Mat2AXIvideo_U0_ap_start() {
    Mat2AXIvideo_U0_ap_start = ap_start.read();
}

void process_image::thread_Mat2AXIvideo_U0_start_full_n() {
    Mat2AXIvideo_U0_start_full_n = ap_const_logic_1;
}

void process_image::thread_Mat2AXIvideo_U0_start_write() {
    Mat2AXIvideo_U0_start_write = ap_const_logic_0;
}

void process_image::thread_ap_done() {
    ap_done = Mat2AXIvideo_U0_ap_done.read();
}

void process_image::thread_ap_idle() {
    ap_idle = (AXIvideo2Mat_U0_ap_idle.read() & Mat2AXIvideo_U0_ap_idle.read());
}

void process_image::thread_ap_ready() {
    ap_ready = AXIvideo2Mat_U0_ap_ready.read();
}

void process_image::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void process_image::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void process_image::thread_ap_sync_done() {
    ap_sync_done = Mat2AXIvideo_U0_ap_done.read();
}

void process_image::thread_ap_sync_ready() {
    ap_sync_ready = AXIvideo2Mat_U0_ap_ready.read();
}

void process_image::thread_video_in_TREADY() {
    video_in_TREADY = AXIvideo2Mat_U0_video_in_TREADY.read();
}

void process_image::thread_video_out_TDATA() {
    video_out_TDATA = Mat2AXIvideo_U0_video_out_TDATA.read();
}

void process_image::thread_video_out_TDEST() {
    video_out_TDEST = Mat2AXIvideo_U0_video_out_TDEST.read();
}

void process_image::thread_video_out_TID() {
    video_out_TID = Mat2AXIvideo_U0_video_out_TID.read();
}

void process_image::thread_video_out_TKEEP() {
    video_out_TKEEP = Mat2AXIvideo_U0_video_out_TKEEP.read();
}

void process_image::thread_video_out_TLAST() {
    video_out_TLAST = Mat2AXIvideo_U0_video_out_TLAST.read();
}

void process_image::thread_video_out_TSTRB() {
    video_out_TSTRB = Mat2AXIvideo_U0_video_out_TSTRB.read();
}

void process_image::thread_video_out_TUSER() {
    video_out_TUSER = Mat2AXIvideo_U0_video_out_TUSER.read();
}

void process_image::thread_video_out_TVALID() {
    video_out_TVALID = Mat2AXIvideo_U0_video_out_TVALID.read();
}

void process_image::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_CONTROL_BUS_AWVALID\" :  \"" << s_axi_CONTROL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_CONTROL_BUS_AWREADY\" :  \"" << s_axi_CONTROL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWADDR\" :  \"" << s_axi_CONTROL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WVALID\" :  \"" << s_axi_CONTROL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_WREADY\" :  \"" << s_axi_CONTROL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WDATA\" :  \"" << s_axi_CONTROL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WSTRB\" :  \"" << s_axi_CONTROL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARVALID\" :  \"" << s_axi_CONTROL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARREADY\" :  \"" << s_axi_CONTROL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARADDR\" :  \"" << s_axi_CONTROL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RVALID\" :  \"" << s_axi_CONTROL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_RREADY\" :  \"" << s_axi_CONTROL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RDATA\" :  \"" << s_axi_CONTROL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RRESP\" :  \"" << s_axi_CONTROL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BVALID\" :  \"" << s_axi_CONTROL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_BREADY\" :  \"" << s_axi_CONTROL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BRESP\" :  \"" << s_axi_CONTROL_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TDATA\" :  \"" << video_in_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TKEEP\" :  \"" << video_in_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TSTRB\" :  \"" << video_in_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TUSER\" :  \"" << video_in_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TLAST\" :  \"" << video_in_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TID\" :  \"" << video_in_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TDEST\" :  \"" << video_in_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TDATA\" :  \"" << video_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TKEEP\" :  \"" << video_out_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TSTRB\" :  \"" << video_out_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TUSER\" :  \"" << video_out_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TLAST\" :  \"" << video_out_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TID\" :  \"" << video_out_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TDEST\" :  \"" << video_out_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TVALID\" :  \"" << video_in_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_in_TREADY\" :  \"" << video_in_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_out_TVALID\" :  \"" << video_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_out_TREADY\" :  \"" << video_out_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

